"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreeSitterType = void 0;
var TreeSitterType;
(function (TreeSitterType) {
    TreeSitterType["Program"] = "program";
    TreeSitterType["BracedExpression"] = "braced_expression";
    TreeSitterType["ParenthesizedExpression"] = "parenthesized_expression";
    TreeSitterType["BinaryOperator"] = "binary_operator";
    TreeSitterType["UnaryOperator"] = "unary_operator";
    TreeSitterType["NamespaceOperator"] = "namespace_operator";
    TreeSitterType["Identifier"] = "identifier";
    TreeSitterType["IfStatement"] = "if_statement";
    TreeSitterType["ElseStatement"] = "else";
    TreeSitterType["ForStatement"] = "for_statement";
    TreeSitterType["WhileStatement"] = "while_statement";
    TreeSitterType["RepeatStatement"] = "repeat_statement";
    TreeSitterType["Call"] = "call";
    TreeSitterType["Return"] = "return";
    TreeSitterType["FunctionDefinition"] = "function_definition";
    TreeSitterType["String"] = "string";
    TreeSitterType["Float"] = "float";
    TreeSitterType["Integer"] = "integer";
    TreeSitterType["Complex"] = "complex";
    TreeSitterType["Inf"] = "inf";
    TreeSitterType["Nan"] = "nan";
    TreeSitterType["Na"] = "na";
    TreeSitterType["Null"] = "null";
    TreeSitterType["True"] = "true";
    TreeSitterType["False"] = "false";
    TreeSitterType["Break"] = "break";
    TreeSitterType["Next"] = "next";
    TreeSitterType["Subset"] = "subset";
    TreeSitterType["Subset2"] = "subset2";
    TreeSitterType["ExtractOperator"] = "extract_operator";
    TreeSitterType["Parameter"] = "parameter";
    TreeSitterType["Argument"] = "argument";
    TreeSitterType["Dots"] = "dots";
    TreeSitterType["DotDotI"] = "dot_dot_i";
    TreeSitterType["Comment"] = "comment";
    TreeSitterType["Error"] = "ERROR";
})(TreeSitterType || (exports.TreeSitterType = TreeSitterType = {}));
//# sourceMappingURL=tree-sitter-types.js.map