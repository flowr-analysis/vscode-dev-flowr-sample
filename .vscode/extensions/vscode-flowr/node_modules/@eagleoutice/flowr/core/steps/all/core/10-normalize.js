"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NORMALIZE = void 0;
exports.getCurrentRequestFile = getCurrentRequestFile;
const print_1 = require("../../../print/print");
const normalize_printer_1 = require("../../../print/normalize-printer");
const parser_1 = require("../../../../r-bridge/lang-4.x/ast/parser/json/parser");
function getCurrentRequestFile(request) {
    if (request === undefined) {
        return undefined;
    }
    else if (Array.isArray(request)) {
        return request[0].request === 'file' ? request[0].content : undefined;
    }
    else {
        return request.request === 'file' ? request.content : undefined;
    }
}
function processor(results, input) {
    return (0, parser_1.normalize)(results.parse, input.getId, getCurrentRequestFile(input.request));
}
exports.NORMALIZE = {
    name: 'normalize',
    humanReadableName: 'normalize',
    description: 'Normalize the AST to flowR\'s AST',
    processor,
    executed: 0 /* PipelineStepStage.OncePerFile */,
    printer: {
        [0 /* StepOutputFormat.Internal */]: print_1.internalPrinter,
        [2 /* StepOutputFormat.Json */]: normalize_printer_1.normalizedAstToJson,
        [5 /* StepOutputFormat.RdfQuads */]: normalize_printer_1.normalizedAstToQuads,
        [3 /* StepOutputFormat.Mermaid */]: normalize_printer_1.printNormalizedAstToMermaid,
        [4 /* StepOutputFormat.MermaidUrl */]: normalize_printer_1.printNormalizedAstToMermaidUrl
    },
    dependencies: ['parse'],
    requiredInput: undefined
};
//# sourceMappingURL=10-normalize.js.map