"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NormalizedAstQueryDefinition = void 0;
const normalized_ast_query_executor_1 = require("./normalized-ast-query-executor");
const ansi_1 = require("../../../util/ansi");
const time_1 = require("../../../util/time");
const ast_1 = require("../../../util/mermaid/ast");
const joi_1 = __importDefault(require("joi"));
exports.NormalizedAstQueryDefinition = {
    executor: normalized_ast_query_executor_1.executeNormalizedAstQuery,
    asciiSummarizer: (formatter, _processed, queryResults, result) => {
        const out = queryResults;
        result.push(`Query: ${(0, ansi_1.bold)('normalized-ast', formatter)} (${(0, time_1.printAsMs)(out['.meta'].timing, 0)})`);
        result.push(`   â•° [Normalized AST](${(0, ast_1.normalizedAstToMermaidUrl)(out.normalized.ast)})`);
        return true;
    },
    schema: joi_1.default.object({
        type: joi_1.default.string().valid('normalized-ast').required().description('The type of the query.'),
    }).description('The normalized AST query simply returns the normalized AST, there is no need to pass it multiple times!')
};
//# sourceMappingURL=normalized-ast-query-format.js.map